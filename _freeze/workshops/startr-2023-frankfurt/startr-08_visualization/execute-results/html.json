{
  "hash": "04ce32e9b87326ba7f35b023ddb630a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploration and Visualization\"\nsubtitle: \"StartR Workshop\"\ndescription: \"Data exploration | ggplot2 visualization\"\nauthor: \"Maik Bieleke, PhD\"\ninstitute: \"University of Konstanz\"\ndate: 11/24/2024\ndate-format: long\nformat: \n  revealjs:\n    fontsize: 24pt\n    chalkboard: false\n    embed-resources: true\n    slide-number: true\n    theme: [simple, _styles/unikn.scss]\n    logo: _styles/icon.png\n    footer: \"[www.maikbieleke.com](https://www.maikbieleke.com)\"\n    margin: 0.2\n    incremental: false \n    slide-level: 2\n    highlight-style: a11y\n    preview-links: true\nfrom: markdown+emoji\nrevealjs-plugins:\n  - attribution\n---\n\n::: {.cell}\n\n:::\n\n\n# Data Exploration\n\n## The data viewer\n\n:::: {.columns}\n::: {.column width=\"50%\"}\nRStudio has a built-in data viewer. You can open it by clicking on the dataset in the Environment pane or by applying the `View()` function to the dataset. It allows you to\n\n- sort columns\n- filter rows\n- search for text\n\n:::\n::: {.column width=\"50%\"}\n![](figures/viewer.png)\n:::\n::::\n\n::: footer\n[https://support.posit.co/hc/en-us/articles/205175388-Using-the-Data-Viewer-in-the-RStudio-IDE](https://support.posit.co/hc/en-us/articles/205175388-Using-the-Data-Viewer-in-the-RStudio-IDE)\n:::\n\n\n## Overview with `str()`\n\nA good overview of the structure of the dataset can be obtained with base R function `str()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(fifa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t17660 obs. of  13 variables:\n $ ID         : num  209658 212198 224334 192985 224232 ...\n $ Name       : chr  \"L. Goretzka\" \"Bruno Fernandes\" \"M. Acuña\" \"K. De Bruyne\" ...\n $ Age        : num  27 27 30 31 25 27 30 32 28 28 ...\n $ Nationality: chr  \"Germany\" \"Portugal\" \"Argentina\" \"Belgium\" ...\n $ Club       : chr  \"FC Bayern München\" \"Manchester United\" \"Sevilla FC\" \"Manchester City\" ...\n $ Reputation : num  4 3 2 4 3 4 4 3 3 3 ...\n $ Height     : chr  \"189\" \"179\" \"172\" \"181\" ...\n $ Weight     : chr  \"82\" \"69\" \"69\" \"70\" ...\n $ Overall    : num  87 86 85 91 86 89 86 83 82 88 ...\n $ Potential  : num  88 87 85 91 89 90 86 83 82 88 ...\n $ Value      : num  9.10e+07 7.85e+07 4.65e+07 1.08e+08 8.95e+07 ...\n $ Wage       : num  115000 190000 46000 350000 110000 130000 220000 61000 63000 250000 ...\n $ Foot       : chr  \"Right\" \"Right\" \"Left\" \"Right\" ...\n```\n\n\n:::\n:::\n\n\n\n## Overview with `glimpse()`\n\nAn alternative is the `dplyr::glimpse()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::glimpse(fifa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 17,660\nColumns: 13\n$ ID          <dbl> 209658, 212198, 224334, 192985, 224232, 212622, 197445, 18…\n$ Name        <chr> \"L. Goretzka\", \"Bruno Fernandes\", \"M. Acuña\", \"K. De Bruyn…\n$ Age         <dbl> 27, 27, 30, 31, 25, 27, 30, 32, 28, 28, 26, 36, 27, 26, 27…\n$ Nationality <chr> \"Germany\", \"Portugal\", \"Argentina\", \"Belgium\", \"Italy\", \"G…\n$ Club        <chr> \"FC Bayern München\", \"Manchester United\", \"Sevilla FC\", \"M…\n$ Reputation  <dbl> 4, 3, 2, 4, 3, 4, 4, 3, 3, 3, 2, 4, 3, 1, 3, 1, 3, 3, 4, 3…\n$ Height      <chr> \"189\", \"179\", \"172\", \"181\", \"172\", \"177\", \"180\", \"183\", \"1…\n$ Weight      <chr> \"82\", \"69\", \"69\", \"70\", \"68\", \"75\", \"78\", \"80\", \"86\", \"74\"…\n$ Overall     <dbl> 87, 86, 85, 91, 86, 89, 86, 83, 82, 88, 84, 88, 86, 83, 84…\n$ Potential   <dbl> 88, 87, 85, 91, 89, 90, 86, 83, 82, 88, 87, 88, 87, 86, 85…\n$ Value       <dbl> 91000000, 78500000, 46500000, 107500000, 89500000, 1055000…\n$ Wage        <dbl> 115000, 190000, 46000, 350000, 110000, 130000, 220000, 610…\n$ Foot        <chr> \"Right\", \"Right\", \"Left\", \"Right\", \"Right\", \"Right\", \"Left…\n```\n\n\n:::\n:::\n\n\n\n\n## Dataset properties\n\n- number of rows\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  nrow(fifa)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  [1] 17660\n  ```\n  \n  \n  :::\n  :::\n\n\n- number of columns\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  ncol(fifa)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  [1] 13\n  ```\n  \n  \n  :::\n  :::\n\n\n- dimensions (rows x columns)\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  dim(fifa)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  [1] 17660    13\n  ```\n  \n  \n  :::\n  :::\n\n\n- names of the variables\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  names(fifa)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n   [1] \"ID\"          \"Name\"        \"Age\"         \"Nationality\" \"Club\"       \n   [6] \"Reputation\"  \"Height\"      \"Weight\"      \"Overall\"     \"Potential\"  \n  [11] \"Value\"       \"Wage\"        \"Foot\"       \n  ```\n  \n  \n  :::\n  :::\n\n  \n\n## First and last rows with `head()` and `tail()`\n\n- show the first 3 rows\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  head(fifa, 3) \n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n        ID            Name Age Nationality              Club Reputation Height\n  1 209658     L. Goretzka  27     Germany FC Bayern München          4    189\n  2 212198 Bruno Fernandes  27    Portugal Manchester United          3    179\n  3 224334        M. Acuña  30   Argentina        Sevilla FC          2    172\n    Weight Overall Potential    Value   Wage  Foot\n  1     82      87        88 91000000 115000 Right\n  2     69      86        87 78500000 190000 Right\n  3     69      85        85 46500000  46000  Left\n  ```\n  \n  \n  :::\n  :::\n\n  \n- show the last 3 rows\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  tail(fifa, 3)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n            ID            Name Age Nationality           Club Reputation Height\n  17658 270567        A. Demir  25      Turkey   Ümraniyespor          1    190\n  17659 256624    21 S. Czajor  18      Poland Fleetwood Town          1    187\n  17660 256376 21 F. Jakobsson  20      Sweden IFK Norrköping          1    186\n        Weight Overall Potential Value Wage  Foot\n  17658     82      51        56 70000 2000 Right\n  17659     79      50        65 90000  500 Right\n  17660     78      50        61 90000  500  Left\n  ```\n  \n  \n  :::\n  :::\n\n\n\n\n## Overview of the dataset with `skimr()` {.scrollable}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(fifa)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n── Data Summary ────────────────────────\n                           Values\nName                       fifa  \nNumber of rows             17660 \nNumber of columns          13    \n_______________________          \nColumn type frequency:           \n  character                4     \n  numeric                  9     \n________________________         \nGroup variables            None  \n\n── Variable type: character ─────────────────────────────────────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Name                  0             1   3  25     0    17140          0\n2 Nationality           0             1   4  24     0      161          0\n3 Club                  0             1   0  45   211      927          0\n4 Foot                  0             1   4   5     0        2          0\n\n── Variable type: numeric ───────────────────────────────────────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate       mean          sd  p0     p25    p50      p75      p100 hist \n1 ID                    0             1  246319.     31488.     16 240732. 257041  263028.    271340 ▁▁▁▁▇\n2 Age                   0             1      23.1        4.64   15     20      22      26         54 ▇▅▁▁▁\n3 Height                0             1     181.         6.96  149    176     181     186        206 ▁▁▇▅▁\n4 Weight                0             1      74.3        6.98   48     70      74      79        110 ▁▆▇▁▁\n5 Overall               0             1      63.4        8.04   43     58      63      69         91 ▂▇▆▃▁\n6 Potential             0             1      71.0        6.53   42     67      71      75         95 ▁▂▇▅▁\n7 Value                 0             1 2739788.   7841276.      0 325000  700000 1725000  190500000 ▇▁▁▁▁\n8 Wage                  0             1    8190.     20477.      0    550    2000    6000     450000 ▇▁▁▁▁\n9 Reputation            0             1       1.11       0.407   1      1       1       1          5 ▇▁▁▁▁\n```\n:::\n\n\n\n\n## Plotting in R\n\nThere are many ways to create plots in R.\n\n- Base R graphics  \n- `lattice` graphics\n- `ggplot2` graphics\n- ...\n\n\n\n\n\n\n\n\n\n# The `ggplot2` Package {background-color=\"white\" background-image=\"figures/ggplot2-hex.png\" background-opacity=\"0.2\"}\n\n## Grammar of Graphics\n\n:::: {.columns}\n::: {.column width=\"70%\"}\n![Leland Wilkinson](figures/wilkinson.jpg){fig-align=\"left\"}\n:::\n::: {.column width=\"30%\"}\n![](figures/grammar-of-graphics.jpg)\n:::\n::::\n\n## `ggplot2`\n\n:::: {.columns}\n::: {.column width=\"30%\"}\n![](figures/ggplot2-book.jpg)\n:::\n::: {.column width=\"70%\"}\n![Hadley Wickham](figures/wickham.jpg){fig-align=\"left\"}\n:::\n::::\n\n\n\n## Installing and loading ggplot2\n\nWe need to install the `ggplot2` package once.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\ninstall.packages(\"ggplot2\") # if not already installed\n```\n:::\n\n\nNow we can load the package into our current R session.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nlibrary(ggplot2)\n```\n:::\n\n\n\n\n## The `ggplot()` function\n\nEvery plot is initialized with the `ggplot()` function. It has two main arguments:\n\n-   `data` specifies the data frame to be used\n-   `mapping` specifies how variables are mapped to visual properties (aesthetics) of geoms\n\n::: callout-important\n## Aesthetics are the visual properties of geoms (e.g., position, color, size).\n:::\n\n\n\n\n\n\n\n\n\n\n\n# Basic plotting\n\n## Data\n\nWe first specify the data frame to be used for plotting. This provides variables (columns) and observations (rows).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(data = fifa)\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-14-1.png){width=864}\n:::\n:::\n\n\n\n\n## Global aesthetics\n\nWe map variables of the data frame to global visual properties (aesthetics) of the plot. Here, `Overall` and `Wage` are mapped to x and y positions.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(data = fifa, mapping = aes(x = Overall, y = Wage))\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-15-1.png){width=864}\n:::\n:::\n\n\n\n\n## Geometric objects\n\nWe add geometric objects (geoms) with `+` and `geom_*()`. Here, we draw points at all x and y positions.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall, y = Wage)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-16-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n# More geoms and aesthetics\n\n## Adding geoms\n\nGeometric layers can be stacked to create more complex plots. Just add more `+ geom_*()` calls.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fifa, aes(x = Overall, y = Wage)) +\n  geom_point() + geom_smooth()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-17-1.png){width=864}\n:::\n:::\n\n\n\n\n## Adding global aesthetics\n\nAdditional global aesthetics can be added to the `ggplot()` function. They will be applied to all geoms.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fifa, aes(x = Overall, y = Wage, color = Foot)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-18-1.png){width=864}\n:::\n:::\n\n\n\n\n## Adding local aesthetics\n\nAesthetics can also be added locally to affect only a single geom.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fifa, aes(x = Overall, y = Wage)) +\n  geom_point() +\n  geom_smooth(aes(color = Foot))\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-19-1.png){width=864}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Common types of plots\n\n## Histograms and density plots\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-20-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_density()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-21-1.png){width=864}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_histogram(color = \"white\")\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-22-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_density(aes(color = Foot))\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-23-1.png){width=864}\n:::\n:::\n\n:::\n::::\n\n\n\n## Boxplots and violin plots\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-24-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Foot, y = Overall)) + \n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-25-1.png){width=864}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Overall)) + \n  geom_boxplot(aes(fill = Foot))\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-26-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Foot, y = Overall)) + \n  geom_violin() + geom_boxplot(width = 0.1) \n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-27-1.png){width=864}\n:::\n:::\n\n:::\n::::\n\n\n\n## Barplots\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Foot)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-28-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Reputation, \n                 fill = Foot)) + \n  geom_bar(position = \"stack\")\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-29-1.png){width=864}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Foot)) + \n  geom_bar(aes(fill = Foot))\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-30-1.png){width=864}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nggplot(fifa, aes(x = Reputation, \n                 fill = Foot)) + \n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-31-1.png){width=864}\n:::\n:::\n\n:::\n::::\n\n\n\n\n\n\n\n\n\n\n# Fine-tuning plots\n\n## Facets\n\nFacets can be used to create multiple plots based on a categorical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Create a plot for each foot\nggplot(fifa, aes(x = Overall, y = Wage)) + \n  geom_point() + geom_smooth() +\n  facet_wrap(~ Foot)\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-32-1.png){width=864}\n:::\n:::\n\n\n## Scales\n\nScales control the mapping from data to aesthetics. They can be manually changed with `scale_*` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Change the color used for the points\nggplot(fifa, aes(x = Overall, y = Wage, color = Foot)) + \n  geom_point() + \n  scale_color_manual(values = c(\"blue\", \"red\")) +\n  labs(x = \"Ability Score\", y = \"Wage in KEuro\", \n       title = \"Relationship between Ability and Wage\",\n       color = \"Preferred Foot\")\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-33-1.png){width=864}\n:::\n:::\n\n\n## Theme elements\n\nTheme elements control the non-data components of the plot. They can be changed with `theme()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Change the position of the legend from the right to the bottom\nggplot(fifa, aes(x = Overall, y = Wage, color = Foot)) + \n  geom_point() + \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-34-1.png){width=864}\n:::\n:::\n\n\n## Themes\n\nThemes change the overall appearance of the plot. They can be changed with `theme_*` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Use the black and white (bw) theme\nggplot(fifa, aes(x = Overall, y = Wage, color = Foot)) + \n  geom_point() + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](startr-08_visualization_files/figure-revealjs/unnamed-chunk-35-1.png){width=864}\n:::\n:::\n\n\n\n\n# Saving plots\n\n## The `ggsave()` function\n\nThe `ggsave()` function saves plots to a file. By default, the last plot is saved into your current working directory.\n\n-   The `filename` argument specifies the file name. The file type is automatically determined by the file extension (e.g., PNG, JPG).\n-   The optional `path` argument specifies the path to the file.\n-   The optional `width` and `height` arguments specify the width and height of the plot.\n\n## Example\n\nThe following code saves a plot as a PNG file into the \"figures\" folder of the current working directory. The plot is named \"myplot\" and has a width of 9 inches and a height of 4 inches.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(filename = \"figures/myplot.png\", \n       width = 9, height = 4)\n```\n:::\n\n\nThere are several additional options, e.g.\n\n-   `plot` to specify the plot to be saved\n-   `dpi` to specify the resolution of the plot\n-   `units` to specify the units of the width and height arguments\n\n\n",
    "supporting": [
      "startr-08_visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}